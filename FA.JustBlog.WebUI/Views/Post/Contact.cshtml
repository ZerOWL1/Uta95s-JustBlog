@model FA.JustBlog.Services.ViewModels.Mails.MailViewModel

@{
    Layout = "~/Views/Shared/_PostLayout.cshtml";


    var successMess = TempData["SendMailSuccess"] as string;
    var failMess = TempData["SendMailFail"] as string;
}

<!-- Page Header-->
<header class="masthead" style="background-image: url('/wwwroot/assets/images/post-imgs/contact-bg.jpg')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="page-heading">
                    <h1>Contact Us</h1>
                    <span class="subheading">Have questions? We have answers.</span>
                </div>
            </div>
        </div>
    </div>
</header>
<!-- Main Content-->
<main class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <p>Want to get in touch? Fill out the form below to send us a message and we will get back to you as soon as possible!</p>
                <div class="my-5">
                    @using (Html.BeginForm("Index", "Email", FormMethod.Post, new { id = "contactForm" }))
                    {
                        <div class="form-floating">
                            @Html.TextBoxFor(x => x.Name, new
                            {
                                @class = "form-control",
                                id = "name",
                                placeholder = "Enter your name..."
                            })
                            @Html.LabelFor(x => x.Name)
                            @Html.ValidationMessageFor(x => x.Name, null, new
                            {
                                @class = "invalid-feedback text-danger"
                            })
                        </div>
                        <div class="form-floating">
                            @Html.TextBoxFor(x => x.Email, new
                            {
                                @class = "form-control",
                                id = "email",
                                placeholder = "Enter your email...",
                                type = "email"
                            })
                            @Html.LabelFor(x => x.Email)
                            @Html.ValidationMessageFor(x => x.Email, null, new
                            {
                                @class = "invalid-feedback text-danger"
                            })
                        </div>
                        <div class="form-floating">
                            @Html.TextBoxFor(x => x.Phone, new
                            {
                                @class = "form-control",
                                id = "phone",
                                placeholder = "Enter your phone number...",
                                type = "tel"
                            })
                            @Html.LabelFor(x => x.Phone)
                            @Html.ValidationMessageFor(x => x.Phone, null, new
                            {
                                @class = "invalid-feedback text-danger"
                            })
                        </div>
                        <div class="form-floating">
                            @Html.TextBoxFor(x => x.Message, new
                            {
                                @class = "form-control",
                                id = "message",
                                placeholder = "Enter your message here...",
                                type = "tel",
                                style = "height: 12rem"
                            })
                            @Html.LabelFor(x => x.Message)
                            @Html.ValidationMessageFor(x => x.Message, null, new
                            {
                                @class = "invalid-feedback text-danger"
                            })
                        </div>
                        <br />
                        <div class="form-group mb-3">
                            <div class="g-recaptcha" data-sitekey="6Lern4AaAAAAAHcDkthqGVzuJ24Qq6_WIGhFSAyn"
                                 data-theme="light" data-size="normal"></div>
                        </div>
                        <!-- Submit success message-->
                        <!---->
                        <!-- has successfully submitted-->
                        if (!string.IsNullOrEmpty(successMess))
                        {
                            <div class="d-block" id="submitSuccessMessage">
                                <div class="text-center mb-3 text-success">
                                    <div class="fw-bolder">Send mail submission successful!</div>
                                </div>
                            </div>
                        }

                        <!-- Submit error message-->
                        <!---->
                        <!-- an error submitting the form-->
                        if (!string.IsNullOrEmpty(failMess))
                        {
                            <div class="d-block" id="submitErrorMessage">
                                <div class="text-center text-danger mb-3">
                                    Error sending message! @failMess
                                </div>
                            </div>
                        }

                        <!-- Submit Button-->
                        <button class="btn btn-primary text-uppercase" id="submitButton" type="submit">Send</button>
                    }
                </div>
            </div>
        </div>
    </div>
</main>